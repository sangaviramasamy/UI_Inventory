"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const asset_1 = require("./processing/asset");
const html_1 = require("./processing/html");
const js_1 = require("./processing/js");
function publicPath(options) {
    let viteConfig;
    return {
        name: "vite-plugin-public-path",
        enforce: "post",
        apply: "build",
        configResolved(resolvedConfig) {
            viteConfig = resolvedConfig;
            /* istanbul ignore next */
            if (!viteConfig.base || viteConfig.base === "/") {
                throw new Error("Please use a unique placeholder (e.g. /__vite_base__/) for `config.base` on building (but NOT on previewing)\n" +
                    "Recommended changes:\n" +
                    `  - base: ${JSON.stringify(viteConfig.base)},\n` +
                    `  + base: process.env.NODE_ENV === "production" ? "/__vite_base__/" : "/",\n` +
                    "  (in your Vite config)");
            }
        },
        async generateBundle(_options, bundle) {
            await Promise.all(Object.entries(bundle).map(async ([, chunk]) => {
                if (chunk.type === "chunk") {
                    chunk.code = await (0, js_1.processCode)(viteConfig, options, chunk.fileName, chunk.code);
                }
                else if (chunk.type === "asset" && typeof chunk.source === "string") {
                    if (chunk.fileName.endsWith(".html")) {
                        chunk.source = (0, html_1.processHtml)(viteConfig, options, chunk.fileName, chunk.source);
                    }
                    else {
                        chunk.source = (0, asset_1.processAsset)(viteConfig, options, chunk.fileName, chunk.source);
                    }
                }
            }));
        }
    };
}
exports.default = publicPath;
