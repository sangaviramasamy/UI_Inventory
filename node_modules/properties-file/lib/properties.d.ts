import { KeyValueObject } from './';
import { Property } from './property';
/**
 * A class representing the content of a .properties file.
 */
export declare class Properties {
    /** The collection of property object. */
    collection: Property[];
    /** Object associating keys with their starting line numbers. */
    keyLineNumbers: KeyLineNumbers;
    /**
     * Add a property object into a properties object collection.
     *
     * @param property - A property object, or undefined.
     *
     * @returns Undefined so that we conveniently overwrite the property object.
     */
    add(property: Property | undefined): undefined;
    /**
     * Get keys that have collisions (more than one occurrence).
     */
    getKeyCollisions(): KeyCollisions[];
    /**
     * Get the JSON (key/value) representation of the properties.
     *
     * @returns A key/value representing the properties of the object.
     */
    toJson(): KeyValueObject;
}
/**
 * Object associating keys with their line numbers.
 */
export type KeyLineNumbers = {
    [key: string]: number[];
};
/**
 * A class representing key within a .properties file that had collisions (more than one occurrence).
 */
export declare class KeyCollisions {
    /** The key with collisions. */
    key: string;
    /** The starting line numbers where collisions are found. */
    startingLineNumbers: number[];
    /**
     * Create a new key collision object.
     *
     * @param key - The key with collisions.
     * @param startingLineNumbers - The starting line numbers where collisions are found.
     */
    constructor(key: string, startingLineNumbers: number[]);
    /**
     * Get the number of the line from which the value will be used.
     */
    getApplicableLineNumber(): number;
}
