const fse = require('fs-extra')
const chalk = require('chalk')
const path = require('path')
const { paramCase } = require('param-case')
const projectConfig = require('../helpers/blibli-dev-tools.config')

const lcovAdjustPaths = projectConfig.sonar.lcovAdjustPaths

function modifyLcov(){
  console.log(chalk.cyan('Starting coverage file adjustment....'))
  
  lcovAdjustPaths.forEach(file => {
    const sourceFile = file
    const backupFile = file+'.orig'
    
    fse.copySync(sourceFile, backupFile)

    const lines = _renamePaths(sourceFile)
    const fd = fse.openSync(sourceFile , 'w')
    fse.writeFileSync(fd, lines.join("\n"))
    fse.close(fd)
    console.log(chalk.cyan('\nCoverage file: ' + "'" + file + "'" + ' finished'))
  });
  
  console.log(chalk.green('\nCoverage file adjustment completed.'))
}

function _renamePaths(sourceFile){
  const sep = path.sep
  const regexStr = '^SF.+\\' + (sep === '/' ? '/' : '\\') + '(.+)\\.vue$'
  const vueRegex = new RegExp(regexStr)
  
  // modify all SF with .vue extension with .js
  const lines = fse.readFileSync(sourceFile).toString().split("\n")
  for ( i in lines) {
    const line = lines[i]
    const match = line.match(vueRegex)
    if (!match) continue

    const name = match[1]
    const newName = paramCase(name)
    lines[i] = line.replace(name + '.vue', 'js' + sep + newName + '.js')
  }

  return lines
}

module.exports = {
  modifyLcov
}