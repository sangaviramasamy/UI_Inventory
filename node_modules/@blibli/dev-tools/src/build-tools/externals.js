const projectConfig = require('../helpers/blibli-dev-tools.config')

const { build: { externals: externalsConfig } } = projectConfig

const defaultExternals = new Set([
  'vue',
  'pinia',
  'vue-router',
  'vue-i18n'
])

const defaultGlobals = new Map([
  ['vue', 'Vue'],
  ['pinia', 'pinia'],
  ['vue-router', 'VueRouter'],
  ['vue-i18n', 'VueI18n']
])

const externals = new Set([...defaultExternals].concat(Object.keys(externalsConfig)))
const globals = new Map( Array.from(defaultGlobals).concat(Object.entries(externalsConfig)))

const externalsStr = [...externals].map(v => `  '${v}'`)
  .join(',\n')
const globalsStr = [...globals.entries()].filter(([k, v]) => k && v)
  .map(([k, v]) => `  '${k}': '${v}'`)
  .join(',\n')

const externalsScript =`
// ESM/UMD/IIFE shared settings: externals
// Refer to https://rollupjs.org/guide/en/#warning-treating-module-as-external-dependency
const external = [
  // list external dependencies, exactly the way it is written in the import statement.
  // eg. 'jquery'
${externalsStr}
]

// UMD/IIFE shared settings: output.globals
// Refer to https://rollupjs.org/guide/en#output-globals for details
const globals = {
  // Provide global variable names to replace your external imports
  // eg. jquery: 'jQuery'
${globalsStr}
}
`


const externalPlaceholder = 'const external = {}, globals = {}'

module.exports = {
  externalsScript,
  externalPlaceholder
}
