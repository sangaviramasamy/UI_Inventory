const fs = require('fs')
const fse = require('fs-extra')
const path = require('path')
const chalk = require('chalk')
const pathUtil = require('../utils/path')
const externalTemplate = require('./externals')
const replaceInFile = require('replace-in-file')

const projectDir = pathUtil.root.path
const packageDir = path.join(__dirname, '..', '..')
const temp_config = path.join(projectDir, 'temp_config')
const templateUtilsPath = path.join(packageDir, 'resources/build-tools', 'template.utils.js')
const temp_TemplateUtilsPath = path.join(temp_config, 'template.utils.js')
const SLASH_REGEX = new RegExp('/', 'g')

function prebuild( mode, ComponentsMap, vueVersion ) {
  console.log(chalk.cyan('\nPreparing to build...'))
  console.log(chalk.cyan('version: Vue '+vueVersion))
  console.log(chalk.cyan('format: ' + mode))

  //Copy utils to temp_config
  fse.copySync(templateUtilsPath, temp_TemplateUtilsPath)
  const sourceFile = path.join(packageDir, 'resources/build-tools', `template.${vueVersion}.${mode}.config.js`)

  //Copy template.config.js to temp_config
  ComponentsMap.forEach(i => {
    const file = i.file || i
    const filename = file.replace(SLASH_REGEX, '__') + `.${mode}.config.js`

    const targetFile = path.join(temp_config, filename)
    fse.copySync(sourceFile, targetFile)

    // replace content with proper ones
    replaceInFile.sync({
      files: targetFile,
      from: externalTemplate.externalPlaceholder,
      to: externalTemplate.externalsScript
    })
  })
}

module.exports = {
  prebuild
}
