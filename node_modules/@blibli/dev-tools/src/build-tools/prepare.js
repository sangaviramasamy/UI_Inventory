const { spawn } = require('child_process')
const chalk = require('chalk')
const fse = require('fs-extra')
const path = require('path')
const pathUtil = require('../utils/path')
const projectConfig = require('../helpers/blibli-dev-tools.config')

const versionVue = projectConfig.build.vue
const projectDir = pathUtil.root.path
const packageDir = path.join(__dirname, '..', '..')
const buildResourcePath = path.join(packageDir, 'resources/build-tools')

const getDependencies = () => {
  const commonDependencies = [
    'vite@3.2.4',
    '@rollup/plugin-node-resolve',
    '@rollup/plugin-commonjs',
    'rollup-plugin-gzip',
    '@rollup/plugin-image',
    '@rollup/plugin-terser',
    'vite-plugin-css-injected-by-js',
    'postcss-url',
    '@rollup/plugin-babel',
    '@babel/preset-env',
    '@blibli/dev-tools@latest'
  ]
  const vue2Dependencies = [
    'vite-plugin-vue2',
  ]
  const vue3Dependencies = [
    '@vitejs/plugin-vue',
    '@rollup/plugin-alias',
    '@rollup/plugin-replace'
  ]

  return [
    ...commonDependencies,
    ...(versionVue === 2 ? [...vue2Dependencies] : []),
    ...(versionVue === 3 ? [...vue3Dependencies] : []), 
  ]
}

const installDependencies = (dependencies) => {
  const opt = {
    shell: true,
    cwd: projectDir,
    stdio: 'inherit' //stdout will set to null
  }
  const args = [
    '--save-dev',
    '--silent' //only showing progress bars
  ]
  const cmd = `npm i ${dependencies}`
  const log = chalk.green(`Success install all dependencies`)
  
  const install = spawn(cmd, args, opt)
  install.on('error', (err) => {
    console.error(chalk.red(`${err}`))
  })
  install.on('close', (code) => {
    console.log(log)
  })
}

const copyConfigFiles = async () => {
  const sourcePath = path.join(buildResourcePath, 'config-files')
  const targetPath = path.join(projectDir)
  fse.copySync(sourcePath, targetPath)
}

const prepare = () => {
  const dependencies = getDependencies().join(' ')
  console.log(chalk.cyanBright('Copying files...'))
  copyConfigFiles()
  console.log(chalk.cyanBright(`Installing dependencies for vue ${versionVue}...`))
  installDependencies(dependencies)
}

module.exports = {
  prepare
}