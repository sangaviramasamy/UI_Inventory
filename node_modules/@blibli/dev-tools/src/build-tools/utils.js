const fs = require('fs')
const path = require('path')
const pathUtil = require('../utils/path')
const projectConfig = require('../helpers/blibli-dev-tools.config')
const projectDir = pathUtil.root.path
const sourceComponents = projectConfig.build.sourceComponents

function getComponentsMap(){
  if(sourceComponents == ''){
    return fs.readdirSync(path.join(projectDir,'src'))
      .filter(file => file === 'index.js').map(i => 'src/'+i)
  }
  if(sourceComponents.includes('components-map.json')){
    return require(pathUtil.getPath('components-map.json'))
  }
  return fs.readdirSync(sourceComponents)
    .map(file => sourceComponents+file)
}

function getOutputPath ({file}, infix='') {
  const dir = path.dirname(file).replace(/^src\//, '')
  const name = path.basename(file)
  const segments = name.split('.')
  const newName = [
    ...segments.slice(0, -1),
    infix,
    'js'
  ].filter(i => i)
    .join('.')
  return `dist/${dir}/${newName}`
}

function getBaseDirName ( file ) {
  const segments = path.join(path.dirname(file)).split(path.sep)
  const [base, type] = segments.slice(-2)
  return path.join(base, type, base)
}

function getPackageDirName ( file ) {
  const segments = path.join(path.dirname(file)).split(path.sep)
  const [base, type] = segments.slice(-2)
  return path.join(base, type)
}

module.exports = {
  getComponentsMap,
  getOutputPath,
  getBaseDirName,
  getPackageDirName
}
