const merge = require('merge-deep')
const pathUtil = require('../utils/path')
const configUtil = require('../utils/config')

// load from project root folder and merge with what we have
const blibliUserConfigs = require(pathUtil.getPath(configUtil.fileName))
const packageJson = require(pathUtil.getPath('package.json'))

const packagerConfig = blibliUserConfigs.packager || {}
const adaptiveTargets = packagerConfig.adaptiveTargets ? [] : [
  {
    source: '',
    target: ''
  }
]

const includesConfig = packagerConfig.includes || {}
const files = includesConfig.files ? [] : ['index.html']
const dirs =  includesConfig.dirs ? [] : ['static']

const buildConfig = blibliUserConfigs.build || {}
const formats = buildConfig.formats ? [] : ['es','cjs']

const sonarConfig = blibliUserConfigs.sonar || {}
const lcovAdjustPaths = sonarConfig.lcovAdjustPaths ? [] : ['tests/coverage/lcov.info']
const lcovReportPaths = sonarConfig.lcovReportPaths ? [] : ['tests/coverage/lcov.info', 'integrations/coverage/lcov.info']
const sources = sonarConfig.sources ? [] : ['.']
const tests = sonarConfig.tests ? [] : ['tests']

const defaultConfig = {
  packager:{
    groupId: 'com.gdn.app-ui',
    isCollab: false,
    distDir: 'dist',
    includes: {
      files,
      dirs
    },
    cleanUps: [],
    adaptiveTargets
  },
  dockerize: {
    serviceName: packageJson.name,
    rootDir: 'app',
    staticDir: '',
  },
  build: {
    vue: 3,
    formats,
    sourceComponents: '',
    externals: {
      // example:
      // vue: 'Vue',
      // 'vue-router': 'VueRouter'
    }
  },
  sonar: {
    projectKey: 'com.gdn.app-ui:app',
    lcovAdjustPaths,
    sources,
    tests,
    exclusions: [
      'node_modules/**',
      'target/**',
      'build/**',
      'config/**',
      'test/**',
      'tests/**',
      'dist/**',
      'src/api-mock/**',
      'src/assets/**',
      'src/main.js',
      'src/init.js',
      'src/i18n/**',
      'src/data/**',
      'vue.config.js',
      'babel.config.js',
      'integrations/**',
      'blibli-integration-test.config.js',
      'blibli-dev-tools.config.js'
    ],
    lcovReportPaths
  },
  preview: {
    port: 10001,
    publicPath: '', // Only for collab project
    proxy: {}, // Devs have to pass proxy objects from proxy config
    replaceVars: {
      _STATIC_PUBLIC_PATH: '/'
      // _ENV_PREFIX: '',
      // _BLIBLI_COLLAB_VER: '1.0.0',
      // _STATIC_IMAGE_PUBLIC_PATH: 'aa/',
      // _NR_APPLICATION_ID: '325157811',
    }, // variables to be replaced in production mode
    noHTMLResponseUrl: [
      '/static/',
      '/backend/'
      // '/product/static/',
      // '/s_images/',
      // '/serviceworker.js'
    ]
  }
}

module.exports = merge(defaultConfig, blibliUserConfigs)
