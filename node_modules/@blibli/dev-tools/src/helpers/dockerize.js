const fsExtra = require('fs-extra')
const path = require('path')
const replace = require('replace-in-file')
const chalk = require('chalk')
const pathUtil = require('../utils/path')
const projectConfig = require('./blibli-dev-tools.config')
const { sanitizeFileName } = require('../utils/file')

const projectDir = pathUtil.root.path
const packageDir = path.join(__dirname, '..', '..')

function doDockerize(mode){
    
  const MODE = mode.toUpperCase()
  
  const APP_VERSION = process.env.npm_package_version + (MODE === 'SNAPSHOT' ? '-' + MODE : '')
  const APP_NAME = sanitizeFileName(process.env.npm_package_name)
  const GROUP_ID = projectConfig.packager.groupId
  const SERVICE_NAME = projectConfig.dockerize.serviceName
  const ROOT_DIR = projectConfig.dockerize.rootDir
  const STATIC_DIR = _getStaticDir(projectConfig.dockerize.staticDir)

  console.log(APP_VERSION, 'APP_VERSION')

  const dockerFiles = [
    'Dockerfile',
    'docker_build.properties'
  ]

  dockerFiles.forEach(i => {
    const sourceFile = path.join(packageDir, 'resources', 'docker', i + '.default')
    const targetFile = path.join(projectDir, i)

    console.log(chalk.cyan('Preparing ' + i + ' file..'))

    fsExtra.copySync(sourceFile, targetFile)

    //Replace text in Dockerfile and docker_build.properties
    const replaceVersion = {
        files: targetFile,
        from: new RegExp('{{APP_VERSION}}', 'g'),
        to: APP_VERSION
    }
    replace.sync(replaceVersion)

    const replaceAppName = {
        files: targetFile,
        from: new RegExp('{{APP_NAME}}', 'g'),
        to: APP_NAME
    }
    replace.sync(replaceAppName)

    const replaceServiceName = {
        files: targetFile,
        from: new RegExp('{{SERVICE_NAME}}', 'g'),
        to: SERVICE_NAME
    }
    replace.sync(replaceServiceName)

    const replaceRootDir = {
        files: targetFile,
        from: new RegExp('{{ROOT_DIR}}', 'g'),
        to: ROOT_DIR
    }
    replace.sync(replaceRootDir)

    const replaceStaticDir = {
        files: targetFile,
        from: new RegExp('{{STATIC_DIR}}', 'g'),
        to: STATIC_DIR
    }
    replace.sync(replaceStaticDir)

    const replaceGroupId = {
        files: targetFile,
        from: new RegExp('{{GROUP_ID}}', 'g'),
        to: GROUP_ID
    }
    replace.sync(replaceGroupId)

    console.log(chalk.green('File ' + i + ' ready.'))
  })
}  

function _getStaticDir(staticDir){
  const hasValue = staticDir != ''

  if(hasValue){
    return '/' + staticDir
  }
  return staticDir
}
module.exports = {
  doDockerize
}