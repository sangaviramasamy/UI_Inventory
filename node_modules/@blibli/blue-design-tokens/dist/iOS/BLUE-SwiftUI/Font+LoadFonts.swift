//
//  Font+LoadFonts.swift
//  
//
//  Created by Aldrian Kwantawijaya on 23/05/23.
//
// #if canImport(SwiftUI)
// import SwiftUI
// private class Module {}
// @available(iOS 13.0, macOS 10.15, *)
// public extension Font {
//     static func loadAllFonts() {
//         func pascalToLower(_ input: String,separator: Character = " ") -> String {
//             let regex = try! NSRegularExpression(pattern: "(?<!^)([A-Z])", options: [])
//             let range = NSRange(location: 0, length: input.utf16.count)
//             let modifiedString = regex.stringByReplacingMatches(
//                 in: input,
//                 options: [],
//                 range: range,
//                 withTemplate: "\(separator)$0"
//             )
//             return modifiedString.lowercased()
//         }
        
//         let fontNames: [String] = {
//             Typeface.allCases.flatMap({ typeface in
//                 return FontWeight.allCases.map({ fontWeight in
//                     return pascalToLower((typeface.rawValue + fontWeight.rawValue), separator: "-")
//                 })
//             })
//         }()
        
//         for fontName in fontNames {
//             Self.loadFont(fontName: fontName, fontExtension: "ttf")
//         }
//     }
    
//     static func loadFont(_ bundle: Bundle? = nil , fontName: String, fontExtension: String) {
//         let targetBundle = bundle ?? Bundle(for: Module.self)
//         if let fontUrl = targetBundle.url(forResource: fontName, withExtension: fontExtension),
//            let dataProvider = CGDataProvider(url: fontUrl as CFURL),
//            let newFont = CGFont(dataProvider) {
//             var error: Unmanaged<CFError>?
//             if !CTFontManagerRegisterGraphicsFont(newFont, &error) {
//                 assertionFailure("Error loading Font!")
//             } else {
//                 print("Loaded font")
//             }
//         } else {
//             assertionFailure("Error loading font")
//         }
//     }
// }
// #endif

