//
//  ErrorType.swift
//  
//
//  Created by Aldrian Kwantawijaya on 11/06/23.
//

import Foundation
enum ErrorType: Error {
  
    
    case failCreatingColorAsset
    case incorrectHexStringFormat
    case failWritingFile(Error)
    case invalidData(tokenType: TokenType)
    case serializationFailed(tokenType: TokenType)
    case fileUrlNotFound(tokenType: TokenType)
    case general(String)
    
    
    var description: String {
        switch self {
        case .failCreatingColorAsset:
            return "Failed creating color asset"
        case .incorrectHexStringFormat:
            return "Hex string format incorrect"
        case .failWritingFile(let error):
            return "Error writing to file: \(error)"
        case .invalidData(let tokenType):
            return "Failed to construct data from \(tokenType) json"
        case .serializationFailed(let tokenType):
            return "Failed to serialize \(tokenType) json"
        case .fileUrlNotFound(let tokenType):
            return "The \(tokenType) json is not found"
        case .general(let description):
            return description
        }
    }
}
