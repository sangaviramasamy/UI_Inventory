const { mainUi } = require('../../blibli-integration-test.config')
const fs = require('fs')
const rimraf = require('rimraf')
const path = require('path')
const pathUtil = require('../../../utils/path')
const { spawnSync } = require('../../../utils/proc')
const chalk = require('chalk')

function mainPrepare () {
  if (!mainUi) {
    console.log(chalk.yellow('No mainUi config detected, exiting.'))
    return
  }

  const { repository, branch, targetDir } = mainUi
  const BLIBLI_DIR = pathUtil.getPath('integrations', '_blibli')
  const MAIN_UI_DIR = path.join(BLIBLI_DIR, targetDir)

  console.log(chalk.blue('Cleaning out old _blibli directory if exist..'))
  // create empty folder for main ui
  if (fs.existsSync(BLIBLI_DIR)) {
    rimraf.sync(BLIBLI_DIR)
  }
  console.log(chalk.green('Done'))

  fs.mkdirSync(BLIBLI_DIR, {
    recursive: true
  })

  console.log(chalk.blue('Start cloning to ' + BLIBLI_DIR + '...'))
  const commands = [
    {
      description: 'Cloning main repo',
      cmd: 'git',
      args: [
        'clone',
        '--single-branch',
        '--branch',
        branch,
        repository,
        `"${targetDir}"`
      ],
      cwd: BLIBLI_DIR
    },
    {
      description: 'Install modules',
      cmd: 'npm',
      args: [
        'ci'
      ],
      cwd: MAIN_UI_DIR
    }
  ]

  for (const command of commands) {
    const { cmd, args, cwd, description } = command
    console.log(chalk.blue(new Date(), description, '..'))
    const proc = spawnSync(
      cmd,
      args,
      {
        cwd
      }
    )
    if (proc.status !== 0) {
      return
    }
    console.log(chalk.green(new Date(), 'Done'))
  }
}

module.exports = {
  mainPrepare
}
