const { mainUi } = require('../blibli-integration-test.config')
const fsUtil = require('../../utils/fs')
const pathUtil = require('../../utils/path')
const stringUtil = require('../../utils/string')
const chalk = require('chalk')
const { logLabel } = require('./utils/log-util')

function _checkCollabProject () {
  const { targetDir } = mainUi
    const MAIN_DIR = pathUtil.getPath('integrations', '_blibli', targetDir, 'build/webpack.base.conf.js')
    
    console.log(chalk.blueBright('Process check disableHostCheck in UI-MAIN webpack.base.conf.js...'))

    try {
      const webpackConfig = require(MAIN_DIR)
      if (webpackConfig.devServer.disableHostCheck) {
        console.log(logLabel.PASS, chalk.green('disableHostCheck is exists in webpack.base.conf.js\n'))
        return
      }

      console.log(logLabel.NOT_FOUND, chalk.red('disableHostCheck is not exists'))
      console.log(logLabel.TIPS, `You can add config disableHostCheck on devServer in webpack.base.conf.js:`)
      console.log(chalk.green(`"devServer": {
  "disableHostCheck": true
}`))
      console.log('')
    } catch (error) {
      console.log(error)
    }
}

function _processCheckStandaloneProject ({ PATH, MESSAGE }) {
  if (!fsUtil.fileJsExists(PATH)) {
    return
  }

  console.log(chalk.blueBright(`Checking config file ${MESSAGE.fileName}...`))
  
  const projectConfig = fsUtil.readFileIfExists({
    path: PATH,
  })

  const regexDisableHostCheck = /disableHostCheck:\s*true/
  const disableHostCheckNotExists = stringUtil.checkIfStringNotExists(projectConfig, regexDisableHostCheck)

  if (!disableHostCheckNotExists) {
    console.log(logLabel.PASS, chalk.green(`disableHostCheck is exists in ${MESSAGE.fileName}\n`))
    return
  }

  console.log(logLabel.NOT_FOUND, chalk.red('disableHostCheck is not exists'))
  console.log(logLabel.TIPS, `You can add config disableHostCheck in ${MESSAGE.fileName}:`)
  console.log(chalk.green(MESSAGE.code))
  console.log('')
}

function _checkStandaloneProject () {
  const configFilesPath = [
    {
      PATH: pathUtil.getPath('vue.config.js'),
      MESSAGE: {
        fileName: 'vue.config.js',
        code: `"devServer": {
  "disableHostCheck": true
}`
      }
    },
  ]

  configFilesPath.forEach(_processCheckStandaloneProject)
}

function _checkDevServer () {
  // if project collab
  if (mainUi) {
    _checkCollabProject()
    return
  }
  // if project standalone
  _checkStandaloneProject()
}

const execute = () => _checkDevServer()

module.exports = {
  execute
}