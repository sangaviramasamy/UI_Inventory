const chalk = require('chalk')
const templates = require('./templates')
const fsUtil = require('../../utils/fs')
const pathUtil = require('../../utils/path')
const stringUtil = require('../../utils/string')

// generate .gitignore & .gitattributes
const targets = [{
  file: '.gitignore',
  newValue: templates.git.gitignoreValue,
  searchedString: 'integrations/_blibli'
}, {
  file: '.gitattributes',
  newValue: templates.git.gitattributesValue,
  searchedString: 'integrations/specs/'
}]

function _generateIntegrationGit ({ file, newValue, searchedString }) {
  // get path
  const gitFilePath = pathUtil.getPath(file)
  // get file data
  const dataFile = fsUtil.readFileIfExists({ path: gitFilePath })

  const stringNotExists = stringUtil.checkIfStringNotExists(dataFile, searchedString)

  if (!stringNotExists) {
    console.log(
      chalk.yellow(`"${searchedString}" exists. Skipping.`)
    )
    return
  }

  fsUtil.appendFile(gitFilePath, newValue)
}

function generate () {
  targets.forEach(_generateIntegrationGit)
}

module.exports = {
  generate
}
