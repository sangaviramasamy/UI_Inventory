/**
 * Jenkinsfile configs
 */

// string to find integration
const jenkinsfileIntegrationString = /integration:\s*\[/
const jenkinsfileIntegrationString2 = /integration\s*=\s*\[/
// string to find playwright
const jenkinsfileLibraryString = '@master'

// Jenkins Automation branch Regex
const jenkinsAutomationBranch = /@Library\('jenkins-ci-automation@.+'\)/

const jenkinNewBranchValue = '@Library(\'jenkins-ci-automation@master\')'

// Jenkinsfile BlibliPipeline Regex
const jenkinsBlibliPipeline = /BlibliPipeline\s*\(\[/

// Jenkinsfile integration configs
const jenkinsBlibliPipelineConfig = `BlibliPipeline ([
  test: [
    integration: [
      playwright: [
        enabled: true,
        version: '1.17.1', // MUST be the same as PINNED playwright image in package.json
        min_cpu: '19' // you can define minimum CPU, default is 9
      ]
    ]
  ],`

// Jenkinsfile BlibliPipeline Regex format 2
const jenkinsBlibliPipeline2 = /BlibliPipeline\s*{/

// Jenkinsfile integration configs format 2
const jenkinsBlibliPipelineConfig2 = `BlibliPipeline {
  test = [
    integration = [
      playwright = [
        enabled = true,
        version = '1.17.1', // MUST be the same as PINNED playwright image in package.json
        min_cpu = '19' // you can define minimum CPU, default is 9
      ]
    ]
  ],`

// default Jenkinsfile
const defaultJenkinsfile = `${jenkinNewBranchValue}\n\n${jenkinsBlibliPipelineConfig}\n])`

module.exports = {
  jenkinsfileIntegrationString,
  jenkinsfileIntegrationString2,
  jenkinsfileLibraryString,
  jenkinsAutomationBranch,
  jenkinNewBranchValue,
  jenkinsBlibliPipeline,
  jenkinsBlibliPipelineConfig,
  jenkinsBlibliPipeline2,
  jenkinsBlibliPipelineConfig2,
  defaultJenkinsfile
}
