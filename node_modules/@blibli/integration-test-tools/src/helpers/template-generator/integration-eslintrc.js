const chalk = require('chalk')
const templates = require('./templates')
const fsUtil = require('../../utils/fs')
const pathUtil = require('../../utils/path')
const stringUtil = require('../../utils/string')

// eslintrc path
const eslintrcPath = pathUtil.getPath('.eslintrc.js')

// string to find eslintrc globals config
const globalsString = 'blibli'
// string to find eslintrc env config
const jestString = 'jest/globals'

const targets = [
  {
    searchedString: globalsString,
    oldValue: templates.eslintrc.moduleExportsString,
    newValue: templates.eslintrc.globalsConfig
  },
  {
    searchedString: jestString,
    oldValue: templates.eslintrc.envString,
    newValue: templates.eslintrc.newEnv
  }
]

// read file eslintrc
let eslintrcValue = fsUtil.readFileIfExists({
  path: eslintrcPath,
  defaultData: templates.eslintrc.newEslintrcValue
})

function _handleReplaceStringInEslintrc ({ searchedString, oldValue, newValue }) {
  const stringNotExists = stringUtil.checkIfStringNotExists(eslintrcValue, searchedString)

  if (!stringNotExists) {
    console.log(
      chalk.yellow(`"${searchedString}" exists. Skipping.`)
    )
    return
  }

  // change old eslintrc value to new value
  eslintrcValue = eslintrcValue.replace(oldValue, newValue)
}

function generate () {
  // loop to change value of eslintrc
  targets.forEach(_handleReplaceStringInEslintrc)

  try {
    fsUtil.writeFile(eslintrcPath, eslintrcValue)
  } catch (err) {
    console.error(err)
  }
}

module.exports = {
  generate
}
