const Listr = require('listr')
const integrationConfig = require('./integration-config')
const integrationDir = require('./integration-dir')
const integrationTestSpec = require('./integration-test-spec')
const integrationPackageScripts = require('./integration-package-scripts')
const integrationEslintrc = require('./integration-eslintrc')
const integrationGit = require('./integration-git')
const integrationSonarProject = require('./integration-sonar-project')
const integrationBabelrc = require('./integration-babelrc')
const integrationJenkinsfile = require('./integration-jenkinsfile')

function _getCreateGenerate (answers) {
  return new Listr(
    [
      {
        title: 'Create blibli-integration-test.config.js',
        task: () => integrationConfig.generate(answers)
      },
      {
        title: 'Create dir /integrations/specs/test-feature',
        task: () => integrationDir.generate()
      },
      {
        title: 'Create file integration test specs',
        task: () => integrationTestSpec.generate()
      },
      {
        title: 'Checking integration scripts in package.json',
        task: () => integrationPackageScripts.generate()
      },
      {
        title: 'Checking integration dir path in .gitignore & lfs in .gitattributes',
        task: () => integrationGit.generate()
      },
      {
        title: 'Checking eslintrc configs',
        task: () => integrationEslintrc.generate()
      },
      {
        title: 'Checking sonar-project.properties.default and sonar-project.properties configs',
        task: () => integrationSonarProject.generate()
      },
      {
        title: 'Checking .babelrc configs',
        task: () => integrationBabelrc.generate()
      },
      {
        title: 'Checking Jenkinsfile configs',
        task: () => integrationJenkinsfile.generate()
      }
    ]
  )
}

async function generateTemplate (options) {
  const tasks = _getCreateGenerate(options)

  await tasks.run().catch(err => {
    console.error('\n', err)
  })
}

module.exports = {
  generateTemplate
}
