const pathUtil = require('../utils/path')
const configUtil = require('../utils/config')
const merge = require('merge-deep')

// load from project root folder and merge with what we have
const blibliUserConfigs = require(pathUtil.getPath(configUtil.fileName))

const defaultConfig = {
  // remove this attribute if you are a standalone app
  //mainUi: {
    // repository target and branch
    // repository: 'ssh://git@stash.gdn-app.com:7999/trfeae/pyeongyang-ui-main.git',
    // branch: 'feature/integration-test-jest',
    // target dir for ui main repo
    // targetDir: 'ui-main',
    // url of ui main, change to http-get if no tls activated
    // waitUrls: ['https-get://localhost:10001'],
    // path to mock data ui main, default value as below
    // mockPath: 'integrations/_blibli/ui-main/src/api-mock/index',
    // script command
    // script: 'dev-nomock-desktop'
  //},
  // define your collab or standalone app here
  app: {
    // script to run collab or standalone app in no mock mode
    script: 'dev-nomock',
    // url to app.js file for collab, and localhost+port for standalone app
    // waitUrls: ['http-get://localhost:10027/product-detail/static/js/app.js'],
    // api mock path
    // mockPaths: ['/src/api-mock/index']
  },
  playwright: {
    headless: true, // default to true
    devtools: false,
    debug: false,
    bail: true, // default to true
    inspector: false,
    setRetry: false, // default to false
    retryTimes: 3 // default 3 times retry test if failed
  },
  // remove this attribute if you do not want to exclude file coverage
  // nyc: {
  //   exclude: [
      // example: 'src/main.js'
  //   ]
  // },
  // remove this attribute if you do not use unit testing
  //unitTest: {
    // path to coverage final json file from unit test
    //coverageFinalJsonPaths: ['test/unit/coverage/coverage-final.json']
  //},
  // remove this attribute if you do not need to mock
  mock: {
    // you can add array of url(s) here using regex
    urls: [
      // example url that needs to be mocked: /maps\.google\.com/
    ]
  }
}

module.exports = merge(defaultConfig, blibliUserConfigs)
