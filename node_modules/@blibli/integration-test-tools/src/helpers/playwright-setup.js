const mockUrls = require('./mock-urls')
const playwright = require('playwright')
const fetch = require('node-fetch')
const { playwrightInfo } = require('../utils/config')

async function _connectBrowser () {
  const pwInfo = await fetch(
    `http://${playwrightInfo}`
  )
  const { wsEndpoint } = await pwInfo.json()

  const connection = await playwright.chromium.connect({
    wsEndpoint
  })
  return connection
}

async function launchBrowser () {
  return _connectBrowser()
}

async function closeBrowser (browser) {
  if (!browser) return
  await browser.close()
}

async function createContext (browser) {
  const context = await browser.newContext({
    ignoreHTTPSErrors: true,
    // for default faking geolocation
    geolocation: { longitude: 106.82083986873404, latitude: -6.1790510319617361 },
    permissions: [
      'geolocation',
      'clipboard-read',
      'clipboard-write'
    ],
    hasTouch: true
  })

  for (const i in mockUrls.abortUrls) {
    await context.route(mockUrls.abortUrls[i], route => route.abort())
  }

  return context
}

async function addInitScript (context) {
  // set caret transparent
  await context.addInitScript({
    content: `
      document.addEventListener('DOMContentLoaded', () => {
        const a = document.createElement("style")
        a.innerText = "* { caret-color: transparent; }"
        document.head.appendChild(a)
      })
    `
  })
}

module.exports = {
  launchBrowser,
  closeBrowser,
  createContext,
  addInitScript
}
