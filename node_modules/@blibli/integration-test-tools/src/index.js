const { argv } = require('yargs')
const chalk = require('chalk')

// collab
const { mainPrepare, mainRun } = require('./helpers/collab/main')
const { dockerRun, dockerStop } = require('./helpers/docker')
const {
  jestBase,
  jestBaseUpdateSnapshot,
  generateReport,
  jestRun,
  appsRun,
  appsRunLocal,
  doTest,
  doTestLocal
} = require('./helpers/runner')
const { lintRun } = require('./helpers/eslint')
const { verifyEnv } = require('./helpers/verify-env')

/** functions
"integration:prepare": "node -r esm integrations/helpers/prepare.js",
"integration:run-main": "node -r esm integrations/helpers/run-main.js",
"integration:run-docker": "node -r esm integrations/helpers/run-docker.js",
"integration:stop-docker": "node -r esm integrations/helpers/stop-docker.js",
"integration:base": "cross-env DEBUG=pw:api BABEL_ENV=testing node -r esm node_modules/jest/bin/jest -c integrations/helpers/jest.config.js",
"integration:updateSnapshot": "npm run integration:base -- --updateSnapshot",
"integration:run": "npm run integration:base && npm run integration:report ",
"integration:report": "node integrations/helpers/post-integration-test.js && nyc report --nycrc-path=integrations/helpers/.nycrc.json",
"integration:run-apps-local": "npm run integration:stop-docker && concurrently --kill-others-on-fail -k --success=last \"npm run integration:run-main\" \"npm run dev-nomock\" \"npm run integration:run-docker\"",
"integration:run-apps": "concurrently --kill-others-on-fail -k --success=last \"npm run integration:run-main\" \"npm run dev-nomock\"",
"integration:wait-on-main": "cross-env NODE_TLS_REJECT_UNAUTHORIZED=0 wait-on https-get://localhost:10001",
"integration:wait-on-collab": "wait-on http-get://localhost:10027/product-detail/static/js/app.js",
"integration:wait-on-docker": "wait-on http-get://127.0.0.1:44301/info",
"integration:wait-and-run": "npm run integration:wait-on-main && npm run integration:wait-on-collab && npm run integration:wait-on-docker && npm run integration:run",
"integration:local": "concurrently --kill-others-on-fail -k --success=first \"npm run integration:run-apps-local\" \"npm run integration:wait-and-run\" && npm run integration:stop-docker",
"integration": "concurrently --kill-others-on-fail -k --success=first \"npm run integration:run-apps\" \"npm run integration:wait-and-run\"",
 */

function noFn () {
  console.log(chalk.red('Mode unrecognized.'))
}

const FUNCTIONS = {
  'main:prepare': mainPrepare,
  'main:run': mainRun,
  'docker:run': dockerRun,
  'docker:stop': dockerStop,
  base: jestBase,
  updateSnapshot: jestBaseUpdateSnapshot,
  report: generateReport,
  run: jestRun,
  'apps:run-local': appsRunLocal,
  'apps:run': appsRun,
  'test:local': doTestLocal,
  'test:ci': doTest,
  lint: lintRun,
  'verify-env': verifyEnv
}

function run () {
  const argv_ = argv._
  const [mode, ...args] = argv_
  console.log(chalk.blue('Mode:', mode))
  const fn = FUNCTIONS[mode] || noFn
  fn({
    args
  })
}

// execute
module.exports = {
  run
}
