const pathUtil = require('./path')

const fileName = 'blibli-integration-test.config.js'
const fullPath = pathUtil.getPath(fileName)

const _configTemplate = (mainUi, appJsUrl) => `
module.exports = {${mainUi || ''}
  // define your collab or standalone app here
  app: {
    // script to run collab or standalone app in no mock mode
    script: 'dev-nomock',
    // url to app.js file for collab, and localhost+port for standalone app
    waitUrls: ['http-get://localhost:10027/${appJsUrl || ''}'],
    // api mock path
    mockPaths: ['/src/api-mock/index']
  },
  playwright: {
    headless: true, // default to true
    devtools: false,
    debug: false,
    inspector: false,
    bail: true
  },
  jest: {
    // in local default to 50% cpu thread number and 28 cpu in CI
    // maxWorkers: '50%', uncomment this if you need to override the default value
    // test target files
    testMatch: [
      '<rootDir>/integrations/specs/**/*.spec.js'
    ]
  },
  // remove this attribute if you do not use unit testing
  unitTest: {
    // path to coverage final json file from unit test
    coverageFinalJsonPaths: ['test/unit/coverage/coverage-final.json']
  },
  // remove this attribute if you do not need to mock
  mock: {
    // you can add array of url(s) here using regex
    urls: [
      // example url that needs to be mocked: /maps\.google\.com/
    ]
  }
}`

const collabConfigs = _configTemplate(`
  // remove this attribute if you are a standalone app
  mainUi: {
    // repository target and branch
    repository: 'ssh://git@stash.gdn-app.com:7999/trfeae/pyeongyang-ui-main.git',
    branch: 'feature/integration-test-jest',
    // target dir for ui main repo
    targetDir: 'ui-main',
    // url of ui main, change to http-get if no tls activated
    waitUrls: ['https-get://localhost:10001'],
    // path to mock data ui main, default value as below
    mockPath: 'integrations/_blibli/ui-main/src/api-mock/index',
    // script command
    script: 'dev-nomock-desktop'
  },`, 'product-detail/static/js/app.js')

const standaloneConfigs = _configTemplate()

const formats = {
  collab: collabConfigs,
  standalone: standaloneConfigs
}

const playwrightInfo = '127.0.0.1:44301/info'

module.exports = {
  fileName,
  fullPath,
  formats,
  playwrightInfo
}
