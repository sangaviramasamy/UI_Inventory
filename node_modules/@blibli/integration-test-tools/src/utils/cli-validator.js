const fs = require('fs')
const chalk = require('chalk')
const prompts = require('prompts')
const { argv } = require('yargs')
const configUtil = require('./config')
const templateGenerator = require('../helpers/template-generator')

async function _runGenerateConfig (options) {
  console.log(chalk.yellow('Missing Blibli Integration Test Config file.'))
  console.log(chalk.yellow('Generating config files and samples...'))

  await templateGenerator.generateTemplate(options)
}

async function _askProjectType (argv) {
  const cliAnswer = argv[1]
  
  const checkProjectType = cliAnswer === 'collab' || cliAnswer === 'standalone'

  return checkProjectType ? { 'integrationType': cliAnswer } : await prompts([
    {
      name: 'integrationType',
      type: 'select',
      message: 'Project type for: ',
      choices: [
        { title: 'collab', value: 'collab', description: 'Project for collab' },
        { title: 'standalone', value: 'standalone', description: 'Project for standalone'}
      ]
    }
  ])
}

async function validateCLIInput () {
  // validate collab config availability
  const argv_ = argv._
  const [mode] = argv_

  const isInit = mode === 'init'

  if (fs.existsSync(configUtil.fullPath)) {
    if (!isInit) {
      return
    }

    console.log(chalk.yellow('Config files already exists.'))
    console.log(chalk.yellow('Please verify the contents and run Tests.'))
    process.exit(0)
  }

  const projectType = await _askProjectType(argv_)

  await _runGenerateConfig(projectType)

  if (isInit) {
    process.exit(0)
  }
}

module.exports = {
  validateCLIInput,
  _runGenerateConfig
}
