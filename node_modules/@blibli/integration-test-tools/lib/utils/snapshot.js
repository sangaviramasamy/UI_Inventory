const networkUtil = require('./network')

const DEFAULT_CONFIG = {
  failureThreshold: 0.01,
  failureThresholdType: 'percent',
  // apply blur to tolerate intermittent inaccuracy on snapshot
  blur: 1,
  customSnapshotIdentifier ({defaultIdentifier}) {
    return `${defaultIdentifier}-snap`
  }
}

async function assertSnapshot (
  expect,
  page,
  {
    screenshot = {
    },
    options = {
    },
    network = {
    }
  } = {
  }) {
  const {
    timeout = 1000,
    maxInflightRequest = 1
  } = network

  await networkUtil.waitForNetworkIdle(page, timeout, maxInflightRequest)
  const image = await page.screenshot(screenshot)
  expect(image).toMatchImageSnapshot({
    ...DEFAULT_CONFIG,
    ...options
  })
}

async function assertComponentSnapshot (
  {
    expect,
    page,
    selector,
    options: {
      screenshot = {
      },
      assertConfig = {
      },
      network = {
      }
    } = {}
  }) {
  const {
    timeout = 1000,
    maxInflightRequest = 1
  } = network

  await networkUtil.waitForNetworkIdle(page, timeout, maxInflightRequest)

  const el = selector ? page.locator(selector) : page
  const image = await el.screenshot(screenshot)
  
  expect(image).toMatchImageSnapshot({
    ...DEFAULT_CONFIG,
    ...assertConfig
  })
}

module.exports = {
  assertSnapshot,
  assertComponentSnapshot
}
